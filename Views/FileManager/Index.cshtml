@{
    ViewData["Title"] = "ファイル管理";
    ViewData["ConfirmText"] = "データを削除します。よろしいですか？";
}

@model web_groupware.Models.FileDetailViewModel
<head>
    <style>
        .dropdown-menu.show {
            top: 81px !important;
            left: 12px !important;
        }

        .dropdown-item {
            padding-right: 0px;
            padding-left: 0px;
        }

        .fileAreaHeitWidth {
            min-width: 92px;
            max-width: 92px;
        }

        .fileAreaInnerWidth {
            min-width: 80px;
            max-width: 80px;
        }

        .underline {
            text-decoration: underline !important;
        }
    </style>
</head>

<div class="p-2 px-md-3 pb-md-3 pt-md-2 pb-0">
    <div class="container-fluid">
        <div class="justify-content-between d-flex align-items-center mb-3">
            <span>
                <h4 class="mb-0" id="pageTitle">ファイル管理</h4>
            </span>
            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-outline-secondary rounded-pill new-folder" style="margin-right: 10px">
                    <i class="bi bi-folder-plus"></i> 新しいフオルダ
                </button>
                <button type="button" class="btn btn-outline-secondary rounded-pill new-file">
                    <i class="bi bi-file-plus"></i> 新しいファイル
                </button>
            </div>
        </div>

        @using (Html.BeginForm("Create", "FileManager", FormMethod.Post, new { enctype = "multipart/form-data", id = "fileForm" }))
        {
            <div class="row mx-0 mb-3 d-none" id="fileArea">
                <input type="hidden">
                <div class="col-12 card dropArea border-0 p-2">
                    <div class="text-center px-3 py-3 border-primary" style="border:dashed!important;">
                        <span>ファイルをドラッグ＆ドロップするかクリップボードから画像を貼り付けしてください　または　</span>
                        <label class="input-group-btn hand-pointer">
                            <span class="btn btn-secondary">
                                ファイル選択<input type="file" multiple class="d-none" name="fileList" onchange="handleSubmit(this)">
                            </span>
                        </label>
                        <br>
                        <input type="hidden" name="currentDirectory">
                        <span>ファイル追加（Shiftキーを押しながらファイルを複数選択可能）</span>
                        <div id="message_file1" class="text-right"></div>
                    </div>
                </div>
            </div>
        }

        <form class="needs-validation" name="folder-form" id="form-create" novalidate>
            <div class="card mb-3 d-none" id="createArea">
                <div class="card-body">
                    <div class="col-xl-8 col-12">
                        <div class="d-flex align-items-center">
                            <span class="me-2">新しいフオルダ</span>
                            <div class="me-2">
                                <input class="form-control" type="text" name="title" id="input-name" required />
                            </div>
                            <button type="submit" class="btn btn-success me-2">追加</button>
                            <button type="button" class="btn btn-light" id="cancel-create">キャンセル</button>
                        </div>
                        @*<div class="invalid-feedback">ファイルやフォルダ名をご入力ください。</div>*@
                    </div>
                </div>
            </div>
        </form>

        <div class="card">
            <div class="card-header justify-content-between d-flex align-items-center">
                <span>
                    <input type="checkbox" class="selectAllFile" />　すべて選択
                </span>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary rename action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-input-cursor-text"></i> 名前を変更
                    </button>
                    <button type="button" class="btn btn-primary move action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-folder-symlink"></i> 移動
                    </button>
                    <button type="button" class="btn btn-danger delete action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-trash3"></i> 削除
                    </button>
                </div>
            </div>
            <div class="card-body">
                <span id="currentDirectory"></span>
                <table class="table table-centered table-hover table-nowrap mb-0">
                    <thead class="table-light">
                        <tr>
                            <th></th>
                            <th scope="col">名前</th>
                            <th scope="col">最終更新者</th>
                            <th scope="col">最終更新日時</th>
                        </tr>
                    </thead>
                    <tbody>
                            @if(Model.fileList != null)
                            @foreach(var item in Model.fileList)
                            {
                                <tr>
                                    <td class="align-middle">
                                        <input type="checkbox" class="selectFile" value="@item.file_no">
                                    </td>
                                    <td class="align-middle">
                                        @if (@item.icon != "")
                                        {
                                            <img src="~/images/file-icons/@item.icon" height="30" alt="icon" class="me-2">
                                        }
                                        @if (@item.type == 1)
                                        {
                                            <a href="javascript:void(0);" class="text-dark folder" >@item.name</a>
                                        }
                                        else
                                        {
                                            <a href="javascript:void(0);" class="text-dark">@item.name</a>
                                        }
                                    </td>
                                    <td class="font-13 align-middle">@item.update_user</td>
                                    <td class="font-13 align-middle">@item.update_date</td>
                                    <td></td>
                                </tr>
                            }
                    </tbody>
                </table>
                <!-- Modal to rename folder -->
                <div class="modal fade" id="rename-modal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header py-3 px-4 border-bottom-0 d-block">
                                <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>
                                <h5 class="modal-title"></h5>
                            </div>
                            <div class="modal-body px-4 pb-4 pt-0">
                                <form class="needs-validation" name="folder-form" id="form-rename" novalidate>
                                    <input type="text" name="id" id="rename-id" hidden />                            
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="mb-2">
                                                <label class="control-label form-label"></label>
                                                <input class="form-control" type="text" name="title" id="input-rename" required />
                                                <div class="invalid-feedback">ファイルやフォルダ名をご入力ください。</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-6">
                                            <button type="button" class="btn btn-light me-1" data-bs-dismiss="modal">キャンセル</button>
                                        </div>
                                        <div class="col-6 text-end">
                                            <button type="submit" class="btn btn-success">保存</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div> <!-- end modal-content-->
                    </div> <!-- end modal dialog-->
                </div>
                <!-- end modal-->   
        
                <!-- Modal to move file or folder -->
                <div class="modal fade" id="move-modal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header py-3 px-4 border-bottom-0 d-block">
                                <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>
                                <h5 class="modal-title"></h5>
                            </div>
                            <div class="modal-body px-4 pb-4 pt-0">
                                <form class="needs-validation" name="move-form" id="form-move" novalidate>
                                    <div class="mt-2">
                                        <label class="control-label form-label"></label>
                                        <select class="col-12 form-select" style="padding: 8px" required>
                                        </select>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-6">
                                            <button type="button" class="btn btn-light me-1" data-bs-dismiss="modal">キャンセル</button>
                                        </div>
                                        <div class="col-6 text-end">
                                            <button type="submit" class="btn btn-success">移動</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div> <!-- end modal-content-->
                    </div> <!-- end modal dialog-->
                </div>
                <!-- end modal-->

                <!-- Modal to delete file or folder -->
                <div class="modal fade" id="delete-modal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title" id="title">確認</h4>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p id="bodyContent">@ViewData["ConfirmText"]</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="bi bi-x"></i> いいえ
                                </button>
                                <button type="button" class="btn btn-danger" id="confirm-delete">
                                    <i class="bi bi-check"></i> はい
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end modal-->
            </div>
            <div class="card-header justify-content-between d-flex align-items-center">
                <span>
                    <input type="checkbox" class="selectAllFile" />　すべて選択
                </span>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary rename action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-input-cursor-text"></i> 名前を変更
                    </button>
                    <button type="button" class="btn btn-primary move action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-folder-symlink"></i> 移動
                    </button>
                    <button type="button" class="btn btn-danger delete action-button disabled" style="margin-right: 10px">
                        <i class="bi bi-trash3"></i> 削除
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>

        var selectedFileList = [];
        var url = decodeURIComponent(window.location.href);
        var currentDirectory = url.split('groupware/FileManager')[1];
        if (currentDirectory == '' || currentDirectory == '/') {
            currentDirectory = '共有フォルダ';
        }
        else {
            currentDirectory = currentDirectory.substring(1);
        }
        if (currentDirectory.endsWith('/')) {
            currentDirectory = currentDirectory.slice(0, -1);
        }
        $('input[name=currentDirectory]').val(currentDirectory);

        var directoryList = currentDirectory.split('/');
        if (directoryList.indexOf('共有フォルダ') == -1) {
            directoryList.unshift('共有フォルダ');
        }
        for(let i = 0; i < directoryList.length; i++) {
            var directory = "";
            for (let j = 0; j <= i; j++) {
                directory = directory.concat(`${directoryList[j]}/`);
            }
            directory = directory.replace('共有フォルダ/', '');
            $('span#currentDirectory').append(
                `<span>
                    <a href="@Url.Action("Index", "FileManager", new { folder = ""})/${directory}">
                        ${directoryList[i]}
                    </a>
                </span>
                <span> / </span>
                `
            );
        }

        function handleSubmit(file) {
            if (file.files.length > 0) {
                $('#fileForm').submit();
            }
        }

        function promptCreateFolder() {
            hideCreateFile();
            if ($('#createArea').hasClass('d-none')) {
                $('#createArea').removeClass('d-none')
                $('.new-folder').removeClass('btn-outline-secondary')
                $('.new-folder').addClass('btn-secondary')
                $('#input-name').focus()
            }
        }

        function hideCreateFolder() {
            if (!$('#createArea').hasClass('d-none')) {
                $('#createArea').addClass('d-none')
                $('.new-folder').addClass('btn-outline-secondary')
                $('.new-folder').removeClass('btn-secondary')
            }
        }

        function toggleCreateFile() {
            if ($('#fileArea').hasClass('d-none')) {
                hideCreateFolder();
                $('#fileArea').removeClass('d-none')
                $('.new-file').removeClass('btn-outline-secondary')
                $('.new-file').addClass('btn-secondary')
            } else {
                $('#fileArea').addClass('d-none')
                $('.new-file').addClass('btn-outline-secondary')
                $('.new-file').removeClass('btn-secondary')
            }
        }

        function promptCreateFile() {
            hideCreateFolder();
            if ($('#fileArea').hasClass('d-none')) {
                $('#fileArea').removeClass('d-none')
                $('.new-file').removeClass('btn-outline-secondary')
                $('.new-file').addClass('btn-secondary')
            }
        }

        function hideCreateFile() {
            if (!$('#fileArea').hasClass('d-none')) {
                $('#fileArea').addClass('d-none')
                $('.new-file').addClass('btn-outline-secondary')
                $('.new-file').removeClass('btn-secondary')
            }
        }

        function promptRename() {
            $('#rename-modal .modal-title').text("名の変更");
            $('#rename-id').val(selectedFileList[0]);
            var name = $(`input[value="${selectedFileList[0]}"]`).parent().parent().find('td:eq(1)').find('a').text();
            $('#input-rename').val(name);

            var myModal = new bootstrap.Modal(document.getElementById('rename-modal'), {});
            myModal.toggle();
        }

        function promptDelete() {
            var myModal = new bootstrap.Modal(document.getElementById('delete-modal'), {});
            myModal.toggle();
        }

        function deleteFile() {
            $.ajax({
                method: "post",
                url: '@Url.Action("Delete", "FileManager")',
                data: {
                    fileNoList: selectedFileList
                },
                success: function (result) {
                    window.location.reload();
                },
                error: function (xhr) {
                    alert("Error:" + xhr.responseText);
                }
            });
        }

        function checkActionValidity(selectedFileList)
        {
            if(selectedFileList.length == 0) {
                $('.action-button').addClass('disabled');
            }
            else {
                $('.action-button').removeClass('disabled');
                if(selectedFileList.length > 1) {
                    $('.action-button.rename').addClass('disabled');
                }
            }

            if (selectedFileList.length == $('.selectFile').length) {
                $('.selectAllFile').prop('checked', true);
            } else {
                $('.selectAllFile').prop('checked', false);
            }
        }
        
        function handleSelectFile() 
        { 
            $('input[type="file"]').click();
        }

        $('#form-create').on('submit', function (e) {
            e.preventDefault();
            var newname = $('#input-name').val();

            var form = $(this)[0];
            if (form.checkValidity()) {
                $.ajax({
                    method: "post",
                    url: '@Url.Action("CreateFolder", "FileManager")',
                    data: {
                        newName: newname,
                        currentDirectory: currentDirectory
                    },
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            } else {
                e.stopPropagation();
                form.classList.add('was-validated');
            }
            //hideCreateFolder();
        });

        $("#form-rename").on('submit', function(e) {
            e.preventDefault();
            var id = $('#rename-id').val();
            var newname = $('#input-rename').val();

            var form = $(this)[0];
            if (form.checkValidity()) {
                $.ajax({
                    method: "post",
                    url: '@Url.Action("Update", "FileManager")',
                    data: {
                        id: id,
                        newName: newname,
                        currentDirectory: currentDirectory
                    },
                    success: function(result) {
                        window.location.reload();
                    },
                    error: function(xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });     
                $('#rename-modal').modal('hide');
            } else {
                e.stopPropagation();
                form.classList.add('was-validated');
            }
        });

        $('#form-move').on('submit', function (e) {
            e.preventDefault();
            var form = $('#form-move')[0];
            if (form.checkValidity()) {
                var destinationFolder = $('#form-move select').val();
                $.ajax({
                    method: "post",
                    url: '@Url.Action("MoveToFolder", "FileManager")',
                    data: {
                        destinationFolder: destinationFolder,
                        fileNoList: selectedFileList
                    },
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert("Error:" + xhr.responseText);
                    }
                });
            }
        });

        $('.new-folder').on('click', function () {
            promptCreateFolder();
        });

        $('#cancel-create').on('click', function () {
            hideCreateFolder();
        });

        $('.new-file').on('click', function () {
            toggleCreateFile();
            //promptCreateFile();
        });

        $('.rename').on('click', function () {
            promptRename();
        });

        $('.move').on('click', function () {
            $('#move-modal .modal-title').text("移動先フォルダを選択し「移動」をクリックしてください");
            $('#move-modal .control-label').text("フォルダ");
            $.ajax({
                method: "post",
                url: '@Url.Action("FindFolderToMove", "FileManager")',
                data: {
                    fileNoList: selectedFileList
                },
                success: function (result) {
                    $('#form-move select').append(
                        '<option value="">-- 移動先フォルダを選択してください --</option>'
                    )
                    for (var folder of result) {
                        $('#form-move select').append(
                            `<option value=${folder}>${folder}`
                        );
                    }
                    var myModal = new bootstrap.Modal(document.getElementById('move-modal'), {});
                    myModal.toggle();
                },
                error: function (xhr) {
                    alert("Error: " + xhr.responseText);
                }
            });
        });

        $('.delete').on('click', function () {
            promptDelete();
        });

        $('#confirm-delete').on('click', function () {
            deleteFile();
        });

        $('a.folder').on({
            click: function () {
                if (url.endsWith('/')) {
                    url = url.slice(0, -1);
                }
                window.location.href = `${url}/${$(this).text()}`;
            }
        });

        $('.table-hover a').on('mouseenter', function() {
            $('.table-hover a').removeClass('underline');
            if (!$(this).hasClass('folder')) {
                $(this).addClass('underline');
            }
        })

        $('.table-hover a').on('mouseleave', function () {
            $(this).removeClass('underline');
        })

        $('.table-hover a').on('click', function () {
            if (!$(this).hasClass('folder')) {
                var id = $($(this).parent().siblings()[0]).find('input').val()
                var fileList = [id];
                downloadFile(fileList)
            }
        })

        function downloadFile(fileList)
        {
            $.ajax({
                method: "post",
                url: '@Url.Action("DownloadFile", "FileManager")',
                data: {
                    //fileNoList: selectedFileList
                    fileNoList: fileList
                },
                success: function (result) {
                    window.location.href = url.split('groupware/FileManager')[0] + 'groupware/downloads/Groupware.zip';
                },
                error: function (xhr) {
                    alert("Error:" + xhr.responseText);
                }
            });
        }

        $('.selectFile').on({
            change: function () {
                var id = parseInt($(this).val());
                if ($(this).is(':checked')) {
                    selectedFileList.push(id);
                }
                else {
                    selectedFileList.splice(selectedFileList.indexOf(id), 1);
                }
                checkActionValidity(selectedFileList);
            }
        });
        $('.selectAllFile').on({
            change: function () {
                if ($(this).is(':checked')) {
                    $('.selectFile').prop('checked', true);
                    selectedFileList = [];
                    @if (Model.fileList != null)
                    {
                        @foreach (var item in Model.fileList)
                        {
                            @:selectedFileList.push(@item.file_no);
                        }
                    }
                }
                else {
                    $('.selectFile').prop('checked', false);
                    selectedFileList = [];
                }
                checkActionValidity(selectedFileList);
            }
        });
        $('#move-modal').on('hidden.bs.modal', function () {
            $('#form-move select').text('');
        });

        $(document).on({
            dragover: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            dragenter: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            drop: function (e) {
                e.stopPropagation();
                e.preventDefault();
            }
        });

        $('div#fileArea').on({
            dragover: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            dragenter: function (e) {
                e.stopPropagation();
                e.preventDefault();
                $('div#fileArea').css('background', '#ceffce');
            },
            drop: function (e) {
                e.stopPropagation();
                e.preventDefault();
                $('input[type="file"]').prop('files', e.originalEvent.dataTransfer.files);
                handleSubmit(document.querySelector('input[type="file"]'));
            }
        });
    </script>
}